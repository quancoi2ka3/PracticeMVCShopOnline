@model BanHangMVC.Models.EF.Products
@{
    ViewData["Title"] = "Thêm mới sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section naviheader {
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/home" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/products" class="nav-link">Sản phẩm</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">Thêm mới</a>
        </li>
    </ul>
}
<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Thêm mới sản phẩm</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Sản phẩm</a></li>
                    <li class="breadcrumb-item active">Thêm mới</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Thông tin thêm mới</h3>

        </div>
        <div class="card-body">
            <div class="bs-stepper-content">
                @using (Html.BeginForm("Add", "Products", new { area = "Admin" }, FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <div class="card-header p-2">
                        <ul class="nav nav-pills">
                            <li class="nav-item"><a class="nav-link active" href="#activity" data-toggle="tab">Thông tin chung</a></li>
                            <li class="nav-item"><a class="nav-link" href="#timeline" data-toggle="tab">Hình ảnh</a></li>
                            <li class="nav-item"><a class="nav-link" href="#settings" data-toggle="tab">SEO</a></li>
                        </ul>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body p-0">
                        <div class="tab-content">
                            <div class="active tab-pane" id="activity">
                                <div class="form-group">
                                    <label for="Title">Tên sản phẩm</label>
                                    @Html.TextBoxFor(x => x.Title, new { @class = "form-control", @placeholder = "Nhập tên sản phẩm" })
                                    @Html.ValidationMessageFor(x => x.Title, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label for="ProductCategoryID">Product Category</label>
                                    @Html.DropDownListFor(m => m.ProductCategoryID, new SelectList(ViewBag.ProductCategory, "ID", "Title"), "Select Category", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.ProductCategoryID, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label for="Title">Alias</label>
                                    @Html.TextBoxFor(x => x.Alias, new { @class = "form-control", @placeholder = "Nhập alias sản phẩm" })
                                    @Html.ValidationMessageFor(x => x.Alias, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label for="Title">SKU</label>
                                    @Html.TextBoxFor(x => x.ProductCode, new { @class = "form-control", @placeholder = "Nhập mã sản phẩm" })
                                    @Html.ValidationMessageFor(x => x.ProductCode, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label for="Title">Mô tả</label>
                                    @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @placeholder = "Mô tả sản phẩm" })
                                    @Html.ValidationMessageFor(x => x.Description, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    <label for="Title">Chi tiết</label>
                                    @Html.TextAreaFor(x => x.Detail, new { @class = "form-control", @placeholder = "Chi tiết sản phẩm" ,@id = "txtDetail"})
                                    @Html.ValidationMessageFor(x => x.Detail, "", new { @class = "text-danger" })
                                </div>
								<div class="row">
									<div class="col-4">
                                        <div class="form-group">
                                            <label for="Title">Số lượng</label>
                                            @Html.TextBoxFor(x => x.Quantity, new { @class = "form-control", @placeholder = "1" })
                                            @Html.ValidationMessageFor(x => x.Quantity, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-4">
                                        <div class="form-group">
                                            <label for="PriceDisplay">Giá</label>
                                            <!-- Input hiển thị: không có name để tránh gửi lên server -->
                                            <input type="text" id="PriceDisplay" value="0" class="form-control auto" />
                                            <!-- Input hidden: chứa giá trị raw, có name="Price" để bind vào model -->
                                            @Html.HiddenFor(x => x.Price, new { id = "Price" })
                                            @Html.ValidationMessageFor(x => x.Price, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-4">
                                        <div class="form-group">
                                            <label for="PriceSaleDisplay">Giá khuyến mại</label>
                                            <!-- Input hiển thị: không có name để tránh gửi lên server -->
                                            <input type="text" id="PriceSaleDisplay" value="0" class="form-control auto" />
                                            <!-- Input hidden: chứa giá trị raw, có name="Price" để bind vào model -->
                                            @Html.HiddenFor(x => x.PriceSale, new { id = "PriceSale" })
                                            @Html.ValidationMessageFor(x => x.PriceSale, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
								<div class="row">
									<div class="col-3">
                                        <div class="form-group">
                                            <label for="IsActive">Hiển thị</label>
                                            @Html.CheckBoxFor(x => x.IsActive, new { @checked = "@checked" })
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class="form-group">
                                            <label for="IsFeature">Hot</label>
                                            @Html.CheckBoxFor(x => x.IsFeature, new { @id ="IsFeature" })
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class="form-group">
                                            <label for="IsHome">Nổi bật</label>
                                            @Html.CheckBoxFor(x => x.IsHome, new { @id = "IsHome" })
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class="form-group">
                                            <label for="IsSale">Sale</label>
                                            @Html.CheckBoxFor(x => x.IsSale, new { @id = "IsSale" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- /.tab-pane -->
                            <div class="tab-pane" id="timeline">
                                <!-- The timeline -->
								<div class="row">
									<div class="col-md-12 text-right">
                                        <input type="button" class="btn btn-primary" id="ITaiAnh" value="Tải ảnh" onclick="BrowseServer('txtImage');" />
                                    </div>
									<div class="col-md-12">
										<table class="table table-hover" id="tbAnhSanPham">
                                            <thead>
												<tr>
                                                    <th class="text-center">STT</th>
                                                    <th class="text-center">Ảnh</th>
                                                    <th class="text-center">Ảnh đại diện</th>
                                                    <th class="text-center">Thao tác</th>

                                                </tr>
                                            </thead>
                                            <tbody id="tbAnhSanPham">
												
                                            </tbody>
                                        </table>
										<input type="hidden" id="tCurrentID" value="0" />
                                    </div>
                                </div>
                            </div>
                            <!-- /.tab-pane -->

                            <div class="tab-pane" id="settings">
                                <form class="form-horizontal">
                                    <div class="form-group row">
                                        <div class="form-group">
                                            <label for="SeoTitle">Seo Title</label>
                                            @Html.TextBoxFor(x => x.SeoTitle, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="form-group">
                                            <label for="SeoKeyword">Seo Keyword</label>
                                            @Html.TextBoxFor(x => x.SeoKeyword, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="form-group">
                                            <label for="SeoDescription">Seo Description</label>
                                            @Html.TextBoxFor(x => x.SeoDescription, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </form>
                            </div>
                            <!-- /.tab-pane -->
                        </div>
                        <div class="row " style="justify-content: space-evenly">
                            <a href="/admin/products" class="btn btn-danger">Quay lại</a>
                            <button type="submit" class="btn btn-primary">Submit</button> 
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>
<!-- /.content -->
@section scripts {
    
<script>
                $(document).ready(function () {
            // Khởi tạo AutoNumeric cho input hiển thị
            var anPrice = new AutoNumeric('#PriceDisplay', {
                currencySymbol: 'đ',              // Ký hiệu tiền tệ
                currencySymbolPlacement: 's',     // Đặt sau số (suffix)
                decimalPlaces: 2,                 // Hiển thị 2 chữ số thập phân
                digitGroupSeparator: '.',         // Dấu phân cách hàng nghìn
                decimalCharacter: ',',            // Dấu thập phân
                unformatOnSubmit: false           // Không tự động unformat khi submit (chúng ta sẽ tự cập nhật)
            });

            var initialValue = $('#Price').val();
            if (initialValue !== '') {
                anPrice.set(initialValue);
            }

            $('#PriceDisplay').on('keyup change blur', function () {
                var rawValue = anPrice.getNumber();  // Lấy giá trị raw không có định dạng
                $('#Price').val(rawValue);           // Cập nhật vào input hidden
            });

            //PriceSale
            var anPrice = new AutoNumeric('#PriceSaleDisplay', {
                currencySymbol: 'đ',              // Ký hiệu tiền tệ
                currencySymbolPlacement: 's',     // Đặt sau số (suffix)
                decimalPlaces: 2,                 // Hiển thị 2 chữ số thập phân
                digitGroupSeparator: '.',         // Dấu phân cách hàng nghìn
                decimalCharacter: ',',            // Dấu thập phân
                unformatOnSubmit: false           // Không tự động unformat khi submit (chúng ta sẽ tự cập nhật)
            });

            // Nếu có giá trị ban đầu từ input hidden, cập nhật lại định dạng cho PriceDisplay
            var initialValue = $('#PriceSale').val();
            if (initialValue !== '') {
                anPrice.set(initialValue);
            }

            $('#PriceDisplay').on('keyup change blur', function () {
                var rawValue = anPrice.getNumber();  // Lấy giá trị raw không có định dạng
                $('#PriceSale').val(rawValue);           // Cập nhật vào input hidden
            });
        });
        // Initialization
        
        
        
				(function (factory) {
					if (typeof define === 'function' && define.amd) {
						define(['jquery'], factory);
					}
					else if (typeof module === 'object' && module.exports) {
						module.exports = factory(require('jquery'));
					} else {
						factory(window.jQuery);
					}
				}(function ($) {
				  $.extend($.summernote.plugins, {
						// Tạo plugin tên elfinder
						'elfinder': function (context) {
							var self = this;
							// ui has renders to build ui elements.
							var ui = $.summernote.ui;
							// Tạo nút bấm
							context.memo('button.elfinder', function () {
								var button = ui.button({
									contents: '<i class="note-icon-picture"/> elFinder',
									tooltip: 'Quản lý file',
									click: function () {
										// Bấm vào nút bấm gọi hàm elfinderDialog
										elfinderDialog(context);
									}
								});
								// create jQuery object from button instance.
								var $elfinder = button.render();
								return $elfinder;
							});
							// This methods will be called when editor is destroyed by $('..').summernote('destroy');
							// You should remove elements on `initialize`.
							this.destroy = function () {
								this.$panel.remove();
								this.$panel = null;
							};
						}

					});
				}));
				function elfinderDialog(editor) {
						var fm = $('<div/>').dialogelfinder({
						url : "/el-finder-file-system/connector",
						baseUrl: "@Url.Content("~/lib/elfinder")",
						lang : 'vi',
						width : 840,
						height: 450,
						destroyOnClose : true,
						getFileCallback : function(files, fm) {
							console.log(files);
										editor.invoke('editor.insertImage', files.url);
						},
						commandsOptions : {
							getfile : {
								oncomplete : 'close',
								folders : false
							}
						}
					}).dialogelfinder('instance');
				}
				function BrowseServer(inputId) {
			$('<div/>').dialogelfinder({
				url: "/el-finder-file-system/connector", // Đường dẫn tới server xử lý file
				baseUrl: "@Url.Content("~/lib/elfinder/")",
				lang: 'vi',
				width: 840,
				height: 450,
				destroyOnClose: true,
				getFileCallback: function (file, fm) {
                    addImageProduct(file.url); // Gán đường dẫn ảnh vào ô nhập liệu
				},
				commandsOptions: {
					getfile: {
						oncomplete: 'close',
						folders: false
					}
				}
			}).dialogelfinder('instance');
		}

				$(document).ready(function() {
					$('#txtDetail').summernote({
						height: 200,
						toolbar: [
							['style', ['bold', 'italic', 'underline', 'clear']],
							['font', ['bold', 'underline', 'clear']],
							['fontsize', ['fontsize']],
							['color', ['color']],
							['insert',['link','picture','video','elfinder']],
							['view',['fullscreen','codeview','help']],
							['para', ['ul', 'ol', 'paragraph']],
							['height', ['height']]
						]
					});
				});
                        function addImageProduct(url) {
            var temp = $('#tCurrentID').val();
            var currentId = parseInt(temp) + 1;
            var str = "";
            if (currentId == 1) {
                str += `<tr class="text-center" id="tRow_${currentId}">
                    <td class="text-center">${currentId}</td>
                    <td class="text-center">
                        <img width="80" src="${url}" alt="" /><input type="hidden" value="${url}" name="Images" />
                    </td>
                    <td class="text-center"><input type="radio" name="rDefault" value="${currentId}" checked="checked"/></td>
                    <td class="text-center">
                        <a href="#" data-id="${currentId}" class="btn btn-danger btnXoaAnh">Xóa</a>
                    </td>
                </tr>`;
            } else {
                str += `<tr class="text-center" id="tRow_${currentId}">
                    <td class="text-center">${currentId}</td>
                    <td class="text-center">
                        <img width="80" src="${url}" alt="" /><input type="hidden" value="${url}" name="Images" />
                    </td>
                    <td class="text-center"><input type="radio" name="rDefault" value="${currentId}"/></td>
                    <td class="text-center">
                        <a href="#" data-id="${currentId}" class="btn btn-danger btnXoaAnh">Xóa</a>
                    </td>
                </tr>`;
            }
            $('#tbAnhSanPham').append(str);
            $('#tCurrentID').val(currentId);
        }

        // Move event handler outside and use delegate binding
        $(document).on('click', '#tbAnhSanPham tr td a.btnXoaAnh', function(e) {
            e.preventDefault();
            var conf = confirm("Bạn có chắc chắn muốn xóa ảnh này không?");
            if(conf) {
                var id = $(this).data('id');
                $('#tRow_' + id).fadeTo('fast', 0, function() {
                    $(this).remove();
                });
                var temp = $('#tCurrentID').val();
                var currentId = parseInt(temp) - 1;
                $('#tCurrentID').val(currentId);
            }
        });
           
</script>
}